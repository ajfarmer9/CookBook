package Smokey;

import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import java.util.Arrays;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JFrame;
import javax.swing.JOptionPane;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author sr115
 */
public class FinalDessert extends javax.swing.JFrame {

    /**
     * Creates new form FinalDessert
     */
    public FinalDessert() {
        
        initComponents();
//        GetEverything();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        ingredientsDis = new javax.swing.JTextArea();
        backButton = new javax.swing.JButton();
        homeButton = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        directionsDis = new javax.swing.JTextArea();
        ingredientsTitle = new javax.swing.JLabel();
        directionsTitle = new javax.swing.JLabel();
        dessertName = new javax.swing.JLabel();
        dessertPicture = new javax.swing.JLabel();
        prepTimeTitle = new javax.swing.JLabel();
        prepTimeDis = new javax.swing.JLabel();
        readyInTitle = new javax.swing.JLabel();
        readyInDis = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        servings = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Desserts");
        setResizable(false);

        ingredientsDis.setEditable(false);
        ingredientsDis.setColumns(20);
        ingredientsDis.setLineWrap(true);
        ingredientsDis.setRows(5);
        ingredientsDis.setWrapStyleWord(true);
        jScrollPane1.setViewportView(ingredientsDis);

        backButton.setText("BACK");
        backButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButtonActionPerformed(evt);
            }
        });

        homeButton.setText("HOME");
        homeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                homeButtonActionPerformed(evt);
            }
        });

        directionsDis.setColumns(20);
        directionsDis.setLineWrap(true);
        directionsDis.setRows(5);
        directionsDis.setWrapStyleWord(true);
        jScrollPane2.setViewportView(directionsDis);

        ingredientsTitle.setFont(new java.awt.Font("The Next Font", 1, 13)); // NOI18N
        ingredientsTitle.setText("Ingredients");

        directionsTitle.setFont(new java.awt.Font("The Next Font", 1, 13)); // NOI18N
        directionsTitle.setText("Directions");

        dessertName.setFont(new java.awt.Font("The Next Font", 3, 16)); // NOI18N
        dessertName.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        dessertName.setText("jLabel1");
        dessertName.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        dessertPicture.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        dessertPicture.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        dessertPicture.setMaximumSize(new java.awt.Dimension(366, 366));
        dessertPicture.setMinimumSize(new java.awt.Dimension(177, 177));

        prepTimeTitle.setText("Prep Time:");

        prepTimeDis.setText("jLabel2");

        readyInTitle.setText("Ready in:");

        readyInDis.setText("jLabel4");

        jLabel1.setText("Serves:");

        servings.setText("jLabel2");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(dessertName, javax.swing.GroupLayout.PREFERRED_SIZE, 333, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(40, 40, 40))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(directionsTitle)
                                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 434, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 25, Short.MAX_VALUE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(74, 74, 74)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel1)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(servings))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(prepTimeTitle)
                                        .addGap(18, 18, 18)
                                        .addComponent(prepTimeDis)
                                        .addGap(61, 61, 61)
                                        .addComponent(readyInTitle)
                                        .addGap(18, 18, 18)
                                        .addComponent(readyInDis))))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(45, 45, 45)
                                .addComponent(dessertPicture, javax.swing.GroupLayout.PREFERRED_SIZE, 366, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(backButton, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(45, 45, 45)
                        .addComponent(homeButton, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(ingredientsTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(32, 32, 32))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 238, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(ingredientsTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 362, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(backButton, javax.swing.GroupLayout.DEFAULT_SIZE, 53, Short.MAX_VALUE)
                            .addComponent(homeButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(dessertPicture, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(dessertName, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(prepTimeTitle)
                            .addComponent(prepTimeDis)
                            .addComponent(readyInTitle)
                            .addComponent(readyInDis))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(servings))
                        .addGap(11, 11, 11)
                        .addComponent(directionsTitle)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void backButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButtonActionPerformed
        this.setVisible(false);
        DessertChoices.main();
    }//GEN-LAST:event_backButtonActionPerformed

    private void homeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_homeButtonActionPerformed
        this.setVisible(false);
        String[] hey = {"hey"};
        MainFrame.main(hey);
    }//GEN-LAST:event_homeButtonActionPerformed
//, BufferedImage pic
    public void LoadPage(String name, String ingred, String directs, String prepTime, String readyTime, BufferedImage pic, String serves)
    {
        this.setVisible(true);
        
        //two lines below split the strings up based on character given and used in file
        String[] directions = directs.split("-");
        String[] ingredients = ingred.split("-");
        ImageIcon blu = new ImageIcon(pic);
        
        servings.setText(serves);
        dessertPicture.setIcon(blu);
        dessertName.setText(name);
        prepTimeDis.setText(prepTime);
        readyInDis.setText(readyTime);
     
        //displays directions
        for(int i = 0; i < directions.length; i++)
        {
//            directionsDis.setText(directions[i]);  
            directionsDis.append("- " + directions[i] + "\n\n");
        }

        //displays ingredients
        for(int i = 0; i < ingredients.length; i++)
        {
//            ingredientsDis.setText(ingredients[i]);
            ingredientsDis.append(i+1 + "). " + ingredients[i]+ "\n");
        }   
       
    }
    
    public void GetEverything(String choiceS)
    {

        DessertFile sweets = new DessertFile();
        boolean success;
        BufferedImage img = null;
        
        String ingred = "";
        String name = "";
        String directions = "";
        String timePrep = "";
        String timeReady = "";
        String serving = "";

        success = sweets.ReadFile();
        
        
        String[] names = new String[sweets.getNumber()];
        
        if(success == true)
        {
            //puts the names of desserts in a string array called names
            for(int i = 0; i < sweets.getNumber(); i++)
            {
                names[i] = sweets.getName(i);
            }
        
            //decides what information to get based off of choice sent over
            for(int i = 0; i < sweets.getNumber(); i++)
            {
                if(choiceS.equals(names[i]))
                {
                    //the following 5 lines just gets all the information for the dessert chosen
                    ingred = sweets.getIngredients(i);
                    name = sweets.getName(i);
                    directions = sweets.getDirections(i);
                    timePrep = sweets.getPrepTime(i);
                    timeReady = sweets.getReadyTime(i);
                    serving = sweets.getServings(i);
                    
              //------------------This section gets the image that goes along with the dessert----------
                    if("Chocolate Eclair Dessert".equals(name))
                    {
                        File image = new File("build/classes/images/chocolateEclair.jpg");
                
                        if(image.exists())
                        {
                            try {
                                img = ImageIO.read(image);
                            } catch (IOException ex){
                     
                            JFrame frame = new JFrame();
                            JOptionPane.showMessageDialog(frame, "Something Went Wrong!!\n" + "         -FinalDessert\n\n" + ex, "Error", JOptionPane.ERROR_MESSAGE);
                            System.out.println("Something Went Wrong!(Dessert)\n" + ex);
                                }//end of catch
                 
                        }//end of if
                
                    }//end of if
                    if("Coconut Cream Dessert".equals(name))
                    {
                       File image = new File("build/classes/images/coconutCream.jpg");
                       
                       if(image.exists())
                       {
                           try {
                               img = ImageIO.read(image);
                           }catch(IOException ex) {
                               JFrame frame = new JFrame();
                            JOptionPane.showMessageDialog(frame, "Something Went Wrong!!\n" + "         -FinalDessert\n\n" + ex, "Error", JOptionPane.ERROR_MESSAGE);
                            System.out.println("Something Went Wrong!(Dessert)\n" + ex);
                           }//end of catch 
                       }//end of if
                    }//end of if
              
                     if("Walnut Banana Bread Pudding".equals(name))
                    {
                       File image = new File("build/classes/images/walnutBananaBread.jpg");
                       
                       if(image.exists())
                       {
                           try {
                               img = ImageIO.read(image);
                           }catch(IOException ex) {
                               JFrame frame = new JFrame();
                            JOptionPane.showMessageDialog(frame, "Something Went Wrong!!\n" + "         -FinalDessert\n\n" + ex, "Error", JOptionPane.ERROR_MESSAGE);
                            System.out.println("Something Went Wrong!(Dessert)\n" + ex);
                           }//end of catch 
                       }//end of if
                    }//end of if
                     if("Chocolate Chip Cookies".equals(name))
                    {
                       File image = new File("build/classes/images/cookies.png");
                       
                       if(image.exists())
                       {
                           try {
                               img = ImageIO.read(image);
                           }catch(IOException ex) {
                               JFrame frame = new JFrame();
                            JOptionPane.showMessageDialog(frame, "Something Went Wrong!!\n" + "         -FinalDessert\n\n" + ex, "Error", JOptionPane.ERROR_MESSAGE);
                            System.out.println("Something Went Wrong!(Dessert)\n" + ex);
                           }//end of catch 
                       }//end of if
                    }//end of if
                //------------------------END OF SECTION----------------------------------

                }//end of if
            
            }//end of for
        
            LoadPage(name, ingred, directions, timePrep, timeReady, img, serving);
        }//end of if
        
    }//End of method
    
    
    /**
     */
    public static void main() {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FinalDessert.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FinalDessert.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FinalDessert.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FinalDessert.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() { 
                
                new FinalDessert().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backButton;
    private javax.swing.JLabel dessertName;
    private javax.swing.JLabel dessertPicture;
    private javax.swing.JTextArea directionsDis;
    private javax.swing.JLabel directionsTitle;
    private javax.swing.JButton homeButton;
    private javax.swing.JTextArea ingredientsDis;
    private javax.swing.JLabel ingredientsTitle;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel prepTimeDis;
    private javax.swing.JLabel prepTimeTitle;
    private javax.swing.JLabel readyInDis;
    private javax.swing.JLabel readyInTitle;
    private javax.swing.JLabel servings;
    // End of variables declaration//GEN-END:variables
}
