/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Smokey;

import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JFrame;
import javax.swing.JOptionPane;

/**
 *
 * @author sr115
 */
public class FinalAppetite extends javax.swing.JFrame {

    /**
     * Creates new form FinalAppetite
     */
    public FinalAppetite() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        ingredientsDis = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        directionsDis = new javax.swing.JTextArea();
        backButton = new javax.swing.JButton();
        homeButton = new javax.swing.JButton();
        directionsTitle = new javax.swing.JLabel();
        ingredientsTitle = new javax.swing.JLabel();
        appetiteTitle = new javax.swing.JLabel();
        appetitePic = new javax.swing.JLabel();
        prepTimeTitle = new javax.swing.JLabel();
        prepTimeDis = new javax.swing.JLabel();
        readyInTitle = new javax.swing.JLabel();
        readyInDis = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        servingSizeDis = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Appetizers");
        setResizable(false);

        ingredientsDis.setEditable(false);
        ingredientsDis.setColumns(20);
        ingredientsDis.setLineWrap(true);
        ingredientsDis.setRows(5);
        ingredientsDis.setWrapStyleWord(true);
        ingredientsDis.setName("ingredientsDis"); // NOI18N
        jScrollPane1.setViewportView(ingredientsDis);

        directionsDis.setColumns(20);
        directionsDis.setLineWrap(true);
        directionsDis.setRows(5);
        directionsDis.setWrapStyleWord(true);
        directionsDis.setName("directionsDis"); // NOI18N
        jScrollPane2.setViewportView(directionsDis);

        backButton.setFont(new java.awt.Font("The Next Font", 0, 14)); // NOI18N
        backButton.setText("Back");
        backButton.setName("backButton"); // NOI18N
        backButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButtonActionPerformed(evt);
            }
        });

        homeButton.setFont(new java.awt.Font("The Next Font", 0, 14)); // NOI18N
        homeButton.setText("Home");
        homeButton.setName("homeButton"); // NOI18N
        homeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                homeButtonActionPerformed(evt);
            }
        });

        directionsTitle.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        directionsTitle.setText("Directions");
        directionsTitle.setName("directionsTitle"); // NOI18N

        ingredientsTitle.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        ingredientsTitle.setText("Ingredients");
        ingredientsTitle.setName("ingredientsTitle"); // NOI18N

        appetiteTitle.setFont(new java.awt.Font("The Next Font", 0, 18)); // NOI18N
        appetiteTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        appetiteTitle.setText("Appetizer");

        appetitePic.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        appetitePic.setMaximumSize(new java.awt.Dimension(172, 422));
        appetitePic.setName("appetitePic"); // NOI18N

        prepTimeTitle.setText("Prep time:");

        prepTimeDis.setText("jLabel2");

        readyInTitle.setText("Ready in:");

        readyInDis.setText("jLabel4");

        jLabel1.setText("Serves:");

        servingSizeDis.setText("jLabel2");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(appetitePic, javax.swing.GroupLayout.PREFERRED_SIZE, 422, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(61, 61, 61)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(prepTimeTitle)
                                .addGap(18, 18, 18)
                                .addComponent(prepTimeDis)
                                .addGap(18, 18, 18)
                                .addComponent(readyInTitle)
                                .addGap(18, 18, 18)
                                .addComponent(readyInDis))
                            .addComponent(appetiteTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 309, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(servingSizeDis))))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(directionsTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 472, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 22, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(backButton)
                        .addGap(66, 66, 66)
                        .addComponent(homeButton)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(ingredientsTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(42, 42, 42))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 237, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(5, 5, 5)
                        .addComponent(ingredientsTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 362, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(homeButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(backButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(appetitePic, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(appetiteTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(prepTimeTitle)
                            .addComponent(prepTimeDis)
                            .addComponent(readyInTitle)
                            .addComponent(readyInDis))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 20, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(servingSizeDis))
                        .addGap(18, 18, 18)
                        .addComponent(directionsTitle)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void backButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButtonActionPerformed
        this.setVisible(false);
        AppetiteChoices.mainAppetite();
    }//GEN-LAST:event_backButtonActionPerformed

    private void homeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_homeButtonActionPerformed
        this.setVisible(false);
        String[] hey = {"hey"};
        MainFrame.main(hey);
    }//GEN-LAST:event_homeButtonActionPerformed

    public void LoadPage(String name, String ingred, String directs, String prepTime, String readyTime, BufferedImage pic, String serves)
    {
        this.setVisible(true);
        
        //two lines below split the strings up based on character given and used in file
        String[] directions = directs.split("-");
        String[] ingredients = ingred.split("-");
        ImageIcon blu = new ImageIcon(pic);

        servingSizeDis.setText(serves);
        appetitePic.setIcon(blu);
        appetiteTitle.setText(name);
        prepTimeDis.setText(prepTime);
        readyInDis.setText(readyTime);
     
        for(int i = 0; i < directions.length; i++)
        {
//            directionsDis.setText(directions[i]);   
            directionsDis.append("- " + directions[i] + "\n\n");
        }

        for(int i = 0; i < ingredients.length; i++)
        {
//            ingredientsDis.setText(ingredients[i]);
            ingredientsDis.append(i+1 + "). " + ingredients[i]+ "\n");
        }   
       
    }
    
    
    public void GetEverything(String choiceS)
    {

        AppetiteFile sweets = new AppetiteFile();
        boolean success;
        BufferedImage img = null;
        
        String ingred = "";
        String name = "";
        String directions = "";
        String timePrep = "";
        String timeReady = "";
        String servings = "";

        success = sweets.ReadFile();
        String[] names = new String[sweets.getNumber()];
        
        if(success == true)
        {
            //puts the names of desserts in a string array called names
            for(int i = 0; i < sweets.getNumber(); i++)
            {
                names[i] = sweets.getName(i);
            }
        
            //decides what information to get based off of choice sent over
            for(int i = 0; i < sweets.getNumber(); i++)
            {
                if(choiceS.equals(names[i]))
                {
                    //the following 5 lines just gets all the information for the appetizer chosen
                    ingred = sweets.getIngredients(i);
                    name = sweets.getName(i);
                    directions = sweets.getDirections(i);
                    timePrep = sweets.getPrepTime(i);
                    timeReady = sweets.getReadyTime(i);
                    servings = sweets.getServings(i);
              
              //------------------This section gets the image that goes along with the Appetizer----------
                    if("Strawberry Bruschetta".equals(name))
                    {
                        File image = new File("src/images/strawberryBruschettaPic.jpg");
                
                        if(image.exists())
                        {
                 
                 
                            try {
                                img = ImageIO.read(image);
                            } catch (IOException ex){
                     
                            JFrame frame = new JFrame();
                            JOptionPane.showMessageDialog(frame, "Something Went Wrong!!\n" + "         -FinalAppetite\n\n" + ex, "Error", JOptionPane.ERROR_MESSAGE);
                            System.out.println("Something Went Wrong!(Dessert)\n" + ex);
                                }//end of catch
                 
                        }//end of if
                
                    }//end of if
                    if("Ham and Cheese".equals(name))
                    {
                       File image = new File("src/images/hamandcheese.png");
                       
                       if(image.exists())
                       {
                           try {
                               img = ImageIO.read(image);
                           }catch(IOException ex) {
                               JFrame frame = new JFrame();
                            JOptionPane.showMessageDialog(frame, "Something Went Wrong!!\n" + "         -FinalAppetite\n\n" + ex, "Error", JOptionPane.ERROR_MESSAGE);
                            System.out.println("Something Went Wrong!(Dessert)\n" + ex);
                           }//end of catch 
                       }//end of if
                    }//end of if
              
                    if("Traditional Mexican Guacamole".equals(name))
                    {
                       File image = new File("src/images/mexicanGuacamole.jpg");
                       
                       if(image.exists())
                       {
                           try {
                               img = ImageIO.read(image);
                           }catch(IOException ex) {
                               JFrame frame = new JFrame();
                            JOptionPane.showMessageDialog(frame, "Something Went Wrong!!\n" + "         -FinalAppetite\n\n" + ex, "Error", JOptionPane.ERROR_MESSAGE);
                            System.out.println("Something Went Wrong!(Dessert)\n" + ex);
                           }//end of catch 
                       }//end of if
                    }//end of if
                    
                    if("Reuben Dip".equals(name))
                    {
                       File image = new File("src/images/reubenDip.jpg");
                       
                       if(image.exists())
                       {
                           try {
                               img = ImageIO.read(image);
                           }catch(IOException ex) {
                               JFrame frame = new JFrame();
                            JOptionPane.showMessageDialog(frame, "Something Went Wrong!!\n" + "         -FinalAppetite\n\n" + ex, "Error", JOptionPane.ERROR_MESSAGE);
                            System.out.println("Something Went Wrong!(Dessert)\n" + ex);
                           }//end of catch 
                       }//end of if
                    }//end of if
                //------------------------END OF SECTION----------------------------------

                }//end of if
            
            }//end of for
        
            LoadPage(name, ingred, directions, timePrep, timeReady, img, servings);
        }//end of if
        
    }//End of method
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FinalAppetite.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FinalAppetite.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FinalAppetite.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FinalAppetite.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FinalAppetite().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel appetitePic;
    private javax.swing.JLabel appetiteTitle;
    private javax.swing.JButton backButton;
    private javax.swing.JTextArea directionsDis;
    private javax.swing.JLabel directionsTitle;
    private javax.swing.JButton homeButton;
    private javax.swing.JTextArea ingredientsDis;
    private javax.swing.JLabel ingredientsTitle;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel prepTimeDis;
    private javax.swing.JLabel prepTimeTitle;
    private javax.swing.JLabel readyInDis;
    private javax.swing.JLabel readyInTitle;
    private javax.swing.JLabel servingSizeDis;
    // End of variables declaration//GEN-END:variables
}
